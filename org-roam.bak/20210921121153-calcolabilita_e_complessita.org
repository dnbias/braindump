#+title: Calcolabilitá e Complessitá
#+roam_alias: CalcCompl
[[file:#university.org][$university]]
Prof: Stefano Berardi
* Info Corso
- Orari:
  + Lun 9-11
  + Mer 9-11
- Testo:
  + [[file:20210921121359-introduction_to_the_theory_of_computation.org][Introduction to the theory of Computation]]
- Link:
  + https://turingmachinesimulator.com/
* Teoria
** Macchina di Turing
_The Church-Turing Thesis_
Utilizzata per definire un problema risolvibile
- nato per dare una definizione semplice di risolvibilitá
  + un qualsiasi computer puó essere ridefinito con una =MdT= equivalente
- unico accesso alla memoria
  - come un nastro, legge dall'inizio fino alla fine
    + lenta
    + non é una architettura realmente implementabile
Caratterizzata da:
- controllo
  + stati interni
    - che definiscono comportamenti diversi
- memoria/tape
  + testa di lettura
  + alfabeto a scelta
La macchina é infinita ma la memoria é infinita
- l'Input é finito
- la fine del Input é marcata con un simbolo speciale
A differenza degli Automi a Stati Finiti puó sovrascrivere, appunta per aiutarsi nell'esecuzione
- una macchina di turing puó simulare qualsiasi macchina a differenza di un DFA
*** Definizione Formale
7-tupla $(Q,\Sigma,\Gamma,\delta,q_0,q_{accept},q_{reject})$
1. $Q$: insieme di stati
2. $\Sigma$: alfabeto di Input non contenente il simbolo di blank
3. $\Gamma$: alfabeto del nastro
4. $\delta: Q \times \Gamma \rightarrow Q \times \Gamma \times \{L,R\}$: funzione di transizione
5. $q_{accept}$

Lo stato di rifiuto non viene inserito, é sottointeso a ogni Input non riconosciuto una transizione allo stato di rifiuto, bloccante

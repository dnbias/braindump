#+TITLE: Circuiti Sequenziali

#+ROAM-ALIAS: "Macchine a Stati Finiti" "Finite State Machine" "FSM"

* Tabelle di transizione

* Grafo di transizione

* macchina M = < A , B , Q , o , s >

** Dove:
- A input
- Q stato
- B output
- o funzione di output
- s funzione di stato

Le ~transizioni~~ sono scandite da un Clock

** o :

*** Macchina di Mealy

    A x Q --> B

*** Macchina di Moore

    Q --> B

** s :

    A x Q --> Q


* Latch

    - ingresso i
    - controllo b
    - uscita o
    - stato s

    Quando b = 1 store:   s' =  i
    Quando b = 0 hold:  s' =  s

** Latch SR

    - INPUT

        S, R

    - OUTPUT

        Q, NOT(Q)


Lo stato S=R=1 e' ~instabile~

** Latch D sincronizzato

    - INPUT

        D, CK

    - OUTPUT

        Q, NOT(Q)

Risolve l'ambiguita' dello stato S=R=1
Il latch e' ~trasparente~ in quanto la sua uscita rappresenta il suo stato istante per istante

*** Campionamento

    Memorizzo il contenuto di D solo al livello alto del clock
    - cosi' mi assicuro che D sia ~stabile~ quando vado a campionare

* Flip-FLop

[CK   AND  NOT(CK)]
- In quanto l'invertitore comporta un ~ritardo~ il campionamento avverra' solo quando il risultato sara' alto, quindi al ~fronte di clock~
  - qui si sovrappongono CK e NOT(CK)

 Perde la trasparenza del latch

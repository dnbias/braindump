:PROPERTIES:
:ID:       b10940e8-f505-4d04-b119-d113707e0076
:END:
#+title: Flattening Hierarchical Scheduling
#+date: [2023-04-19 Wed 05:07]
#+filetags: article
- Source:
- Author: Lackorzynski, Warg, Volp, Hartig
- Related: [[id:5c91241d-3da3-47e6-b27a-9afe7e0b4ff0][Sistemi Operativi]], [[id:ad8e431b-7af6-4eb9-99a7-41af9cd0c4ce][Microkernel Based Systems]]

* Notes
- the objective is to integrate multiple real-time systems as guests on a single host using =VM=​s
- in literature there are different takes on the matter
  + /mismatch between embedded-systems requirements and the virtual-machne model is evident in scheduling [...] the integrated nature of embedded systems requires that scheduling priorities of different subsystems must be interleaved. This is at odds with the concept of virtual machines./[fn:heiser The Role of Virtualization in Embedded Systems]
  + some argue bandwidth servers with small and frequently replenished budgets is sufficient
- the paper argues the root of the dispute lies in limitations in current virtualization technology
  + a small enhancement of the scheduler in the guest task sets for the host scheduler to integrate these workloads onto a single system by interleaving

- different types of virtualization
  + faithful and paravirtualization
    - first needs hardware properties in the host
    - second modifies the guest OS

- the approach of the paper is to attenuate the strict separation for schedulers of differents =VM=​s
  + that is the host just provides a budget to guests without any other information
  + this is done by having the host scheduler allocating budgets as /scheduling contexts/
  + as the schedulability of the system is validated this is attached to the =vCPU= of the =VM=
- interrupts are implemented as assignments of =SC= to events by the host

:PROPERTIES:
:ID:       6e332ccc-6881-4fff-a9e9-fd1f14286559
:ROAM_ALIASES: ProgIII
:END:
#+title: Programmazione III
[[id:f956b52b-6fe3-4040-94e5-7474d1813a38][$university]]
* Info Corso
- Orari:
  + Mar: 9-11
  + Gio: 11-13
  + Mer: 9-11 (Lab1)
- Testi:
  + [[id:21f4f4a4-aaa4-4932-9f39-65ed93de3116][Java: How to Program, Late Objects]]
- IDE
  + IntelliJ IDEA
* Teoria
** Programmazione ad Oggetti
*** Concetti Base
Secondo _Alan Kay (Smalltalk)_
- Oggetti
  /fornitori di servizi/
  + Stato
    - attributi
  + Tipo/Classe
- Richieste/Metodi - /delega al metodo, si conosce l'API non l'implementazione/
  + modificano lo stato
  + invio richieste ad altri oggetti
  + comunicazione di informazioni
- Object-oriented Design
  + progettazione orientato ad O

- Classe/Istanza
  + astratto/concreto
    - concreto anche in memoria nello Heap
*** p. procedurale vs p. oggetti
- Procedurale
  + Algoritmi + Strutture Dati
- Oggetti
  + Oggetti + Collaborazione
    /si scorporano funzionalitá diverse in oggetti diversi:/ *delega*
    a) dati + algoritmi
    b) interfacce
*** Gerarchia
- kind-of hierarchy
- part-of hierarchy
**** ereditarieta'
**** polimorfismo
***** Binding Dinamico
:PROPERTIES:
:ID:       c893d363-1f4f-4de6-bbe9-7e5157caec8d
:END:
_Binding statico_, all'atto della compilazione
_Binding dinamico_, l'esecutore puó controllare i tipi degli oggetti, e decidere a runtime il body del metodo da eseguire
- esegue l'implementazione piú specifica possibile
- solo sui metodi, le variabili non vanno a fare overriding

Estremamente modulare e scalabile, meccanismo di delaga
***** Classi Astratte
Utilizzate come interfaccia comune e pubblica, la sottoclasse andrá a implementare i dettagli
***** Interfacce
Non possono avere metodi non astratti
- non sono soggette all'ereditarietá singola, una classe puó implementare tutte le interfacce di cui ha bisogro
***** Overloading
Definizione di firma alternativa di metodo esistente
A tempo _statico_ viene scelta la firma, é bloccante e se ci sono eventuali overloading vengono persi
- a runtime si discende solamente la catena di ereditarietá
**** reflection
** Programmazione ad Eventi
*** Event-Driven Programming
*** Organizzazione e uso GUI
*** Model View Controller
** Programmazione Multithread
/Stesso processo - Esecuzione concorrente di istruzioni/
** Programmazione in Rete
*** Architettura Client-Server
*** Socket
*** Polimorfismo
*** Esecuzione Distribuita
* Laboratorio

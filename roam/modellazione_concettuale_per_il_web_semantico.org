:PROPERTIES:
:ID:       803f5b09-941a-4cf4-84ca-9e8c537ef453
:ROAM_ALIASES: ModSem
:END:
#+title: Modellazione Concettuale per il Web Semantico
#+date: [2022-11-30 Wed 16:20]
#+filetags: university compsci master
- Prof: Rossana Damiano
- [[id:88805531-eaa4-44f1-b819-8b25a84d96ba][Linked Data: Evolving the Web into a Global Data Space]]
- https://www.w3.org/2013/data/
* Linguaggi
** SNePS
- see [[id:9ee33b72-ce0a-4d90-83db-4984266ade9f][SNePS]]
- $ crea variabili
- * riferisce a variabili
#+begin_example
(assert forall $p
    ant (build member *p class Pompeian)
    cq (build member *p class Roman))
#+end_example
- antecedent
- conseguent

#+caption: Tutti i romani sono fedeli a Cesare oppure lo odiano
#+begin_example
(assert forall $r
    ant (build member *r class Roman)
    cq (build min 1 max 1
        arg((build arg1 *r
                rel loyal\ to
                arg2 Caesar)
            (build arg1 *r
                rel hate
                arg2 Caesar))))
#+end_example
- =OR= esclusivo implementato come =min 1 max 1= nodi valgono

#+caption: Le persone assassinano solo i sovrani a cui non sono fedeli
#+begin_example
(assert forall ($ppl $rlr)
    &ant ((build member *ppl class person)
        (build member *rlr class ruler)
        (build arg1 *ppl
            rel try\ to\ assassinate
            arg2 *rlr))
    cq (build min 0 max 0
        arg (build arg1 *ppl
            rel loyal\ to
            arg2 *rlr)))
#+end_example
- =NOT= implementato come =min 0 max 0=
** RDF
- see [[id:1bf19812-6b15-4198-93b4-1f6fb37ea80e][RDF]]
  - descrivere risorse
- RDFS
  - descrivere relazioni tra risorse
  - /property-centric/ language
- [[id:c4bdeb51-c460-4f5d-9a33-2c7e43a2c3dd][OWL]]
  - a livello superiore rispetto RDF
  - descrivere relazioni ricche e complesse tra entita'
  - /class-centric/ language
- [[id:6456f3d1-2bc3-4e50-abf0-1379bef1278d][Semantic Web]]: W3C's vision of the Web of [[id:9b0d4896-4666-4d52-b28c-dd52a01beeea][Linked Data]]
- le specifiche [[id:1bf19812-6b15-4198-93b4-1f6fb37ea80e][RDF]] si suddividono in una serie di documenti
  - [[https://www.w3.org/TR/rdf-primer/][primer]]
  - concepts/syntax
  - XML
  - semantics
  - schema
  - test cases
** Data Model
- Triple
  - unita' base
  - soggetto - predicato - oggetto
    - soggetto: IRI o blank
    - predicato: IRI
    - oggetto: IRI blank o letterale
- [[id:a17688f4-e188-471e-b680-6b7349f71444][IRI]]
- Letterali
- Blank nodes
  - assume significato grazie alla sua posizione nel grafo
  - denota risorse senza l'utilizzo di IRI
    - una variabile, si rappresenta tramite le sue caratteristiche
  - puo' essere associato a un identificativo (generato)
- Grafi
  - =IRI= + triple

La descrizione di una certa entita' si basa sull'utilizzo di *vocabolari condivisi*.
#+caption: esempio di uso di Friend of a Friend (foaf)
#+begin_example
<Bob><http://xmlns.com/foaf/0.1/topic_interest><The Mona Lisa>
#+end_example

I vocabolari sono identificati da prefissi
- i prefissi indicano =namespace=
- =dc= per Dublin Core
- =foaf= per friend of a friend
** Turtle
Il linguaggio =RDF= piú utilizzato, leggibile facilmente da umani.
#+begin_example
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
...

<...#green-goblin>
    rel:enemyOf <...#spiderman> ;
    a foaf:Person ;
    foaf:name "Green Goblin" .

<...#spiderman>
    rel:enemyOf <...#green-goblin> ;
    a foaf:Person ; # spiderman is a Person as defined in foaf.
    foaf:name "Spiderman" .
#+end_example
in =Turtle=
- la relazione =isa= (=rdf:type=) é abbreviata in =a=.
- gli =ISA= sono tra parentesi angolari se per esteso, altrimenti sono utilizzati con il prefisso definito
  - il /fragment identifier/ segue il #

La feature principale di =Turtle= é la abbreviazione delle triple:
#+begin_example
:spiderman :enemyOf :green-goblin ;
           :name    "Spiderman" ,
                    "Uomo Ragno" .
#+end_example
 - =@base=  é utilizzato per definire un prefisso vuoto per alleggerire la scrittura

I *blank node* sono definiti all'interno di parentesi quadre.

I letterali sono seguiti dal loro tipo di dato
- a seguire del delimitatore ^^ l'=IRI= definito per il tipo (o una appreviazione)

** RDFS
Linguaggio /property-centric/
- definire classi, proprietá
- definire gerarchie

Si definiscono (principalmente)
- class
- property
- type
- subclass
- subproperty
- domain
- range (codominio)

#+begin_example
animals:Film rdf:type rdfs:Class .

animals:Animale rdf:type rdfs:Class .

animals:Quadrupede rdf:type rdfs:Class ;
                   rdfs:subClass animals:Animale .
#+end_example
* Vocabolari
[[https://lov.linkeddata.es]]
** Dublin Core
[[https://www.dublincore.org]]
/Schema di Metadati/
- cataloghi di schede
- /data about data/ - *descriptive metadata*
- 15 elementi generici molto utilizzati, per facilitare la scopribilitá delle risorse
  - Creator
  - Contributor
  - Publisher
  - Title
  - Date
  - Language
  - Format
  - Subject
  - Description
  - Identifier
  - Relation
  - Source
  - Type
  - Coverage
  - Rights
- descrive risorse /anything that has identity/
  - tipi di risorsa
    - collection, dataset, event, image, interactive resource, service, software, sound, text, physical object

Principali namespace:
- =DCMES=
  - [[http://dublincore.org/documents/dces/]]
- =DCTerms=
  - [[http://purl.org/dc/elements/1.1/]]

[[https://www.europeana.eu][Europeana]] é una risorsa
** Friend of a Friend
=foaf=
- core
  - Agent, Person, name, title, knows...
- social web
  - nick, homepage, interest, account...
** Schema
[[https://schema.org]]
- collaborative
- schemas for structured data on the Internet
- collaborazione di Google, Microsoft...
- Thing, Action, CreativeWork...
- Organization, Airline, Consortium, Corporation...

* Inferenza
Fatta a partire dalla semantica definita sui vocabolari.
- definizioni di /domain/ e /range/ trasportano conoscenza sulle istanze
- transitivitá di sotto-classe, di sub-property ad esempio
* Ontologie Computazionali
#+caption: Guarino,  1998
#+begin_quote
An engineering artifact, constituted by a specific vocabulary used to describe a certain reality, plus a set of explicit assumptions regarding the intended meaning of the vocabulary itself.
#+end_quote

- rappresentazione astratta di concetti e loro relazioni
- *ontologie formali* rappresentate secondo formalismi noti, machine readable
- *finalitá* di condividere concettualizzazioni comuni tra individui, organizzazioni, macchine

Sono costituite da:
- classi
- proprietá
- assiomi
- individui

I linguaggi delle ontologie formali descrivono
- caratteristiche delle classi
- caratteristiche delle relazioni tra le classi

Le ortologie possono essere definite
- =top-level=, concetti fondazionali comuni a tutti i domini
- =mid-level=, usano il livello fondazionale per definire concetti general
  - organizzazioni, comunicazione, stati fisici, sistemi di misura
- =domain ontologies=, rappresentano concetti e relazioni proprie di un dominio specifico
- =large-scale=
  - CYC, YAGO, YAGO2, dbpedia

#+caption: esempio di una top-level ontology
[[../media/img/top-level-ontology.png]]

La conoscenza di senso comune (/commonsense knowledge/) é importante per task che prevedano interazione con umani
- =CYC=: enCYClopedic Knowledge
  - base di conoscenza di 200k concetti circa
  - divisa in microteorie o dominii, compartimentando la conoscenza

Per l'accesso ai concetti è importante l'integrazione con il linguaggio naturale.
** SuMo
Progetto di =IEEE=: =Suggested Upper Merged Ontology=
- scritta in =KIF= (Knowledge Interchange Format)
- attualmente abbandonata
- allineato con =WordNet= (ontologia lightweight) per permettere la ricerca tramite linguaggio naturale
  - le ontologie lightweight di questo tipo sono solitamente semplici tassonomie, senza assiomi e con poche relazioni

#+caption: esempio di assioma SUMO
#+begin_example
(=>
    (instance ?EF EngineFan)
    (hasPurpose ?EF
        (exists (?C ?E ?A)
            (and
                (instance ?A Automobile)
                (instance ?C Cooling)
                (instance ?E InternalCombustionEngine)
                (part ?E ?A)
                (part ?EF ?A)
                (instrument ?C ?EF)
                (patient ?C ?E)))))
#+end_example
** Linked Open Data
- dati pubblici
- dataset nella rete integrate nella rede =LOD= Cloud
- [[https://www.wikidata.org][Wikidata]]
* Relazioni tra classi
- sottoclasse
- classi disgiunte
** Logiche descrittive
- orientate alla classificazione
- basate sulla sussunzione
- completezza e trattabilità computazionale
- esempi
  - LOOM, BACK, CLASSIC
  - JENA, RACER, OWLIM

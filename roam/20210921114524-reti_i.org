:PROPERTIES:
:ID:       dbb7c5e0-6782-48ac-bf11-4c163747cf37
:END:
#+title: Reti I
[[id:f956b52b-6fe3-4040-94e5-7474d1813a38][$university]]
* Info Corso
- Prof:
  + Marco Botta
- Orari:
  + Mar 16-18
  + Mer 16-18
  + Gio 11-13 (in alternativa a [[id:6e332ccc-6881-4fff-a9e9-fd1f14286559][ProgIII]])
- Testo:
  + [[id:76b7b469-bc51-4cd7-8386-779fc351552c][Computer Netwoking - A Top-Down Approach]]
* Teoria
** Introduzione alle Reti di Calcolatori
Internet come esempio delle reti
*** Componenti
- Computing Devices connessi
  + hosts / sistemi terminali
    - alla periferia della rete
    - eseguono degli applicativi
      + applicazioni di rete
  + links
    - wireless
    - wired
  + router
    - collegati tra di loro
    - collegati agli hosts
      + permettono a questi di comunicare a grandi distanze
      + _packet switching_
- Gerarchia
  + Internet come rete di reti
  + home Network
    - Regional ISP
      + Global ISP
        - mobile Network
    - Institutional Network

In sostanza:
- hosts: clients, servers / dispositivi periferici alla rete / _edge networks_
  + in prevalenza wireless
  + _access network_ punto di accesso
    - per connettere terminali si utilizzano /router di frontiera/
    - reti di accesso residenziale/istituzionale/mobile
- routers in profonditá nella rete / _core network_
  + in prevalenza wired

***** Accesso
****** Digital Subscriber Line
=DSL=
Utilizza linee telefoniche esistenti
- splitter
  + dati vanno su Internet
  + voce va sulla rete telefonica
La linea é asincrona:
- Up < 1Mbps
- Down < 10Mbps
  + poiché questa é la piú utilizzata generalmente
Collegato direttamente alla Centrale
****** Cable Network
Via cavo, utilizzata dagli anglosassoni
- cavo condiviso da vari utenti
- cable modem
  + collegato da uno splitter
    - dati vanno su Internet
    - segnale televisivo va su TV
    - vengono utilizzate tecniche di multiplexing
- Hybrid fiber coax
  + Up < 2Mbps
  + Down < 30Mbps
A differenza della DSL non ha un collegamento diretto al centtrale

****** Enterprise Access Network
Ethernet, sono dei Router che fanno parte della rete internet del ISP
- institutional router
  + Ethernet switch
    - connessioni singole
- Velocitá: 10Mbps, 100Mbps, 1Gbps, 10Gbps
****** Wireless Access Network
- LAN:
  + 100ft
  + 802.11 b/g: 11Mbps, 54Mbps
- Wide-Area
  + telco operator, 10km
  + 1 - 10 Mbps
    - 3G, 4G, LTE
***** Host
Invio di pacchetti di dati tra gli Host
pacchetti di bit di lunghezza $L$, trasmissione a velocitá $R$
- packets
- link bandwidth
Packet Transmission Delay = $\frac{L}{R}$
***** Mezzi Trasmissivi
- guiditati
  + il segnale segue un percorso ben preciso
  + cavi
    - Twisted Pair (TP)
      + 2 cavi di rame intrecciati
    - Coaxial Cable
      + 2 cavi di came concentrici
      + maglia di rame intorno per schermare
      + cavo interno biderezionale banda langa
    - Fiber Optic
      + fibre di vetro all'interno della quale passa la luce
      + il segnale é luminoso, ogni bit é un impulso luminoso
      + molto flessibili
      + molto veloci, immune alle interferenze elettromagnetiche
        - tasso di errore molto basso
- non guidati
  + onde radio
    - segnali trasportati nello spettro elettromagnetico
    - possono essere riflessi, ostruiti, interferiti
    - Microonde terresti
      + < 45Mbps
    - LAN WiFI
      + < 11 - 54Mbps
    - Wide-Area
      + 3G, 4G
    - satellitare
      + delay per la distanza con il satellite
      + da Kbps a Mbps
***** Nucleo della Rete
Packet Switching preferito perché permette a piú utenti di usare la rete contemporaneamente
- questo in quanto é bassa la probabilitá che tutti gli utenti siano attivi contemporaneamente
****** Packet Switching
Router Interconnessi che comunicano usando il packet switching
- ogni pacchetto ha lo stesso formato e dimensione, semplici da _smistare_ verso la destinazione
- ogni pacchetto usa l'intera capacitá del collegamento per essere inviato

_Store-And-Forward_
- il router deve ricevere almeno parte del pacchetto, supponiamo tutto
- solo allora puó decidere su quale collegamento in uscita trasmetterlo
_Queuieng and Loss_
- in uscita solo un pacchetto puó passare per volta
  + si formano delle code nel ~buffer~ del router
  + se la coda é piena un nuovo pacchetto viene scartato

- Funzioni principali del Nucleo
  + routing - instradamento
    - Routing Algorithm
      + determina il cammino che i pacchetti dovranno seguire
    - Local Forwarding Table
  + forwarding - inoltro
    - copia sull'uscita scelta il pacchetto

Piú semplice del circuit switching, i router non devono attivarsi per creare la connessione, ma condividendo le risorse possono crearsi congestioni
- puó essere garantita banda ad alcune app audio/video per ottenere del comportamento simile al circuit switching

****** Circuit Switching
Creare un collegamento diretto tra mittente e destinatario
C'é una ridondanza di collegamenti tra i router
- a seguito di una richiesta i router aprono e chiudono i circuiti per creare una linea diretta di circuiti
- con questo schema non ci sono risorse condivise a differenza del Packet Switching
  + i pacchetti andranno alla massima velocitá possile
  + un circuito non utilizzato puó essere considerato uno spreco
******* FDM
******* TDM
**** Protocolli
Skype, TCP, IP, HTTP, 802.11
Definiscono:
- formato,ordine di messaggi ricevuti e mandati
- azioni intraprese su invio e ricevuta di messaggi
**** Internet Stardards
- RFC: Request for comments
- IETF: Internet Engineering Task Force
  + ente che valuta e accetta standard di comunicazione
**** Packet Delay
:PROPERTIES:
:ID:       21e709d3-7471-45e0-9194-16df2ecb30f1
:END:
$d_{nodal} = d_{proc} + d_{queue} + d_{trans} + d_{prop}$
- processing
- queue
  + dipende dalla congestione
- transmission
  + dipende dalla velocitá
  + $L/R$
- propagation
  + $d/s$
  + $d$: lunghezza del collegamento
  + $s$: velocitá di propagazione nel medium
    + $2e8$ m/sec
Se il buffer é pieno il packetto é perso (/packet drop/)
$\frac{L\cdot a}{R}$ = traffic intensity
$a$ é la quantitá media di pacchetti in entrata
quando questa frazione supera 1 i bit in entrata superano la capacitá trasmissiva, i buffer si vanno a riempire
***** Packet Loss
Il buffer (coda) é piena, un pacchetto é perso, viene comunicato al router precedente/alla sorgente/viene ignorato
**** Throughput
due casi:
1. $R_{S}<R_{C}$
2. $R_{S}>R_{C}$
Throughput, la quantitá minima
- compreso il /bottlenoek link/
*** Servizi
Internet puó essere definito come infrastruttura di servizio ad applicativi
- che ne hanno bisogno per comunicare tra loro
Internet puó anche fornire un'interfaccia di programmazione utile alla comunicazione
- Generalmente:
  + server
    - fornisce un servizio
  + client
    - accede a servizi
Ma la divisione non é netta, ogni Computer puó essere entrambi

L'ISP fornisce una certa bandwidth
- che dipende anche dal proprio PC, che potrebbe fare bottleneck

*** Storia
- 1961: Kleinrock
  + queuing theory dimostra l'efficacia del packet-switching
- 1964: Baran
  + packet-switching in reti militari
- 1967: ARPAnet
  + dell'Advanced Research Project Agency
- 1969
  + attivazione primo nodo ARPAnet
- 1972
  + prima vera rete ARPAnet, posta elettronica
- 1970: ALOHAnet
- 1974: Cerf and Kahn
  + architettura di interconnessione delle reti
  + principi alla base dell'architettura odierna
    - minimalismo
    - autonomia
    - controllo decentralizzato
    - best effort service model
    - dispositivi stateless
- 1976: Xorox
  + Ethernet
- 1979: ARPAnet ha 200 nodi

Proliferano Reti e Protocolli:
- 1983: TCP/IP
- 1982: smtp e-mail
- 1983: DNS
- 1985: ftp
- 1988: controllo congestioni TCP

Commercializzazione e World Wide Web
- 1990~: ARPAnet decommisionata
- 1990~: Web
  - Berners-Lee
    - HTTP, HTML
- 1994: Mosaic, poi Netscape

** Livelli
*** Livello Applicativo
Applicazioni su terminali, permettono uno sviluppo e propagaziose software molto veloce
- il software non si occupa dei dettagli implementativi della comunicazione web
**** Concetti delle Implementazioni
Esistono strutture diverse per le applicazioni
- client-server
  + server - attende richieste
    * host sempre acceso
    * IP permanente
    * data centers
  + client - invia richieste
    * comunicano con il server
    * puó essere connesso periodicamente
    * puó avere IP dinamico
    * non comunicano direttamente tra loro
- peer-to-peer
  + non esiste un server sempre attivo
  + i peer possono comunicare direttamente
  + i peer richiedono servizio ad altri peer che li fornincono
  + auto-scalabile

I processi inviano/ricevono messaggi attraverso i =socket=
- analogo ad una porta
- il percoso e il trasporto é lasciato ai livelli sottostanti

Per ricevere i messaggi i processi devono avere un _identificatore_
- l'host ha un IP unico, ma non basta
  + possono esserci tanti processi in esecuzione
- IP-host + port number
  + HTTP server: 80
  + mail servel: 25

**** Protocolli di Livello Applicativo
Definiscono
- tipo dei messaggi
- sintassi dei messaggi
- semantica dei messaggi
- regole per quando si inviano messaggi e si risponde

Due tipologia
- open protocols
  - RFC liberamente consultabili
  - permettono interoperabilitá
- proprietary protocols

***** Integritá dati
Alcune applicazioni non necessitano dati al 100% corretti
Altre necessitano della completa integritá dei dati

***** Tempi di comunicazione
Alcune applicazioni necessitano una certa temporizzazione, delay basso

***** Throughput
Alcune applicazioni necessitano un minimo throughput da mantenere per funzionare
- multimedia
- a differenza di file-transfer
  + elastic app

***** Sicurezza
Criptazione dei dati, integritá dei dati

***** TCP
- reliable transport
- flow control
- congestion control
- no
  + timing
  + security
  + minimum throughput
- connection-oriented
***** UDP
- unreliable data transfer
- no
  + reliability
  + flow control
  + timing
  + security

Non fornisce servizi particolari, é utilizzato per esempio da applicazioni multimediali
- permette di inviare dati alla stesso velocitá a cui il mittente li puó inviare

***** HTTP
=HyperText Transfer Protocol=
- pagine = insieme di oggetti
- pagine che hanno riferimenti ad altri oggetti
  - identificati URL

- client: browser
- server: web server

Utilizzando TCP
- lato client inizializza connessione creando socket su client e connettendosi alla porta 80 sul server

HTTP é /stateless/
- non mantiene informazioni riguardo le passate connessioni
- questo perché un protocollo con stato é molto complesso

- /non-persistent/
  + al massimo 1 oggetto viene inviato su TCP
    + poi si chiude
  + si deve aprire una nuova connessione per ogni UL/DL
  + =RTT= tempo di andata e ritorno per dati dal client al server
    + puó essere calcolato dal client con questa definizione

- /persistent/
  + viene mantenuta la stessa connessione TCP per un periodo
  + puó velocizzare leggermente la comunicazione


*** Livello di Trasporto
*** Livello di Rete
*** Livello di Collegamento
*** Incapsulamento
Ogni livello che si discende si aggiunge una intestazione
** Sicurezza
Non é stata pensata inizialmente con la sicurezza in mente
- facilitare la comunicazione tra ricercatori
  + con trasparenza

Malware:
- virus
- worm
- spyware
- botnet

Attacchi DoS
- Denial of Service
- attaccanti rendono le risorse sul server non disponibili per il traffico reale con moltissime richieste

Packet Sniffing
- con l'accesso ai mezzi trasmissivi (spesso condivisi)
- intercettazione dei pacchetti trasferiti nel percorso compromesso

IP spoofing
- invio di pacchetti con IP falso, rubato
** Reti Wireless
